# master/dev/feature
-
  environment:
    package_semantic_version: 2.2.0
  version: $(package_semantic_version).{build}
  branches:
    only:
    - master
    - dev
    - /feature\/*/
  skip_tags: true
  skip_commits:
    files:
      - .editorconfig
      - .gitattributes
      - .gitignore
      - appveyor.yml
      - LICENSE
      - README.md
      - Settings.StyleCop
      - Aliencube.AzureFunctions.Extensions.sln
      - Aliencube.AzureFunctions.Extensions.sln.DotSettings
      - '**/*.csproj'
  image: Visual Studio 2019
  configuration: Debug
  platform: Any CPU
  dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '$(package_semantic_version).0'
    package_version: '$(package_semantic_version).0'
  nuget:
    disable_publish_on_pr: true
  before_build:
  - ps: dotnet restore
  build:
    verbosity: minimal

# release/di
-
  environment:
    package_semantic_version: 2.2.0
  version: $(package_semantic_version).{build}
  pull_requests:
    do_not_increment_build_number: true
  branches:
    only:
    - release/di
  skip_tags: true
#  skip_commits:
#    files:
#      - .editorconfig
#      - .gitattributes
#      - .gitignore
#      - appveyor.yml
#      - LICENSE
#      - README.md
#      - Settings.StyleCop
#      - Aliencube.AzureFunctions.Extensions.sln
#      - Aliencube.AzureFunctions.Extensions.sln.DotSettings
#      - '**/*.csproj'
  image: Visual Studio 2019
  configuration: Release
  platform: Any CPU
  dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '$(package_semantic_version).0'
    package_version: '$(package_semantic_version).0'
  nuget:
    disable_publish_on_pr: true
  before_build:
  - ps: dotnet restore
  build:
    verbosity: minimal
  artifacts:
  - path: .\src\Aliencube.AzureFunctions.Extensions.DependencyInjection\**\*.nupkg
    name: Aliencube.AzureFunctions.Extensions.DependencyInjection
  deploy:
  - provider: Environment
    name: Aliencube.AzureFunctions.Extensions
    artifactName: Aliencube.AzureFunctions.Extensions.DependencyInjection

# release/swagger
-
  environment:
    package_semantic_version: 1.5.4
  version: $(package_semantic_version).{build}
  pull_requests:
    do_not_increment_build_number: true
  branches:
    only:
    - release/swagger
  skip_tags: true
#  skip_commits:
#    files:
#      - .editorconfig
#      - .gitattributes
#      - .gitignore
#      - appveyor.yml
#      - LICENSE
#      - README.md
#      - Settings.StyleCop
#      - Aliencube.AzureFunctions.Extensions.sln
#      - Aliencube.AzureFunctions.Extensions.sln.DotSettings
#      - '**/*.csproj'
  image: Visual Studio 2019
  configuration: Release
  platform: Any CPU
  dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '$(package_semantic_version).0'
    package_version: '$(package_semantic_version).0'
  nuget:
    disable_publish_on_pr: true
  before_build:
  - ps: dotnet restore
  build:
    verbosity: minimal
  artifacts:
  - path: .\src\Aliencube.AzureFunctions.Extensions.OpenApi\**\*.nupkg
    name: Aliencube.AzureFunctions.Extensions.OpenApi
  deploy:
  - provider: Environment
    name: Aliencube.AzureFunctions.Extensions
    artifactName: Aliencube.AzureFunctions.Extensions.OpenApi

# release/configjson
-
  environment:
    package_semantic_version: 2.1.1
  version: $(package_semantic_version).{build}
  pull_requests:
    do_not_increment_build_number: true
  branches:
    only:
    - release/configjson
  skip_tags: true
#  skip_commits:
#    files:
#      - .editorconfig
#      - .gitattributes
#      - .gitignore
#      - appveyor.yml
#      - LICENSE
#      - README.md
#      - Settings.StyleCop
#      - Aliencube.AzureFunctions.Extensions.sln
#      - Aliencube.AzureFunctions.Extensions.sln.DotSettings
#      - '**/*.csproj'
  image: Visual Studio 2019
  configuration: Release
  platform: Any CPU
  dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '$(package_semantic_version).0'
    package_version: '$(package_semantic_version).0'
  nuget:
    disable_publish_on_pr: true
  before_build:
  - ps: dotnet restore
  build:
    verbosity: minimal
  artifacts:
  - path: .\src\Aliencube.AzureFunctions.Extensions.Configuration.Json\**\*.nupkg
    name: Aliencube.AzureFunctions.Extensions.Configuration.Json
  deploy:
  - provider: Environment
    name: Aliencube.AzureFunctions.Extensions
    artifactName: Aliencube.AzureFunctions.Extensions.Configuration.Json

# release/appsettings
-
  environment:
    package_semantic_version: 1.1.0
  version: $(package_semantic_version).{build}
  pull_requests:
    do_not_increment_build_number: true
  branches:
    only:
    - release/appsettings
  skip_tags: true
#  skip_commits:
#    files:
#      - .editorconfig
#      - .gitattributes
#      - .gitignore
#      - appveyor.yml
#      - LICENSE
#      - README.md
#      - Settings.StyleCop
#      - Aliencube.AzureFunctions.Extensions.sln
#      - Aliencube.AzureFunctions.Extensions.sln.DotSettings
#      - '**/*.csproj'
  image: Visual Studio 2019
  configuration: Release
  platform: Any CPU
  dotnet_csproj:
    patch: true
    file: '**\*.csproj'
    version: '$(package_semantic_version).0'
    package_version: '$(package_semantic_version).0'
  nuget:
    disable_publish_on_pr: true
  before_build:
  - ps: dotnet restore
  build:
    verbosity: minimal
  artifacts:
  - path: .\src\Aliencube.AzureFunctions.Extensions.Configuration.AppSettings\**\*.nupkg
    name: Aliencube.AzureFunctions.Extensions.Configuration.AppSettings
  deploy:
  - provider: Environment
    name: Aliencube.AzureFunctions.Extensions
    artifactName: Aliencube.AzureFunctions.Extensions.Configuration.AppSettings
